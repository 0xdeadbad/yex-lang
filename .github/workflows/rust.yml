name: Rust 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
   build_windows:
    name: Build on Windows
    runs-on: windows-latest
    env:
      RUSTFLAGS: -Ctarget-feature=+crt-static
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc # skip-pr skip-master
          - aarch64-pc-windows-msvc # skip-pr skip-stable
          - x86_64-pc-windows-gnu # skip-pr
          - i686-pc-windows-gnu # skip-pr skip-master
        include:
          - target: x86_64-pc-windows-gnu
            mingw: https://ci-mirrors.rust-lang.org/rustc/x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z
            mingwdir: mingw64
          - target: i686-pc-windows-gnu
            mingwdir: mingw32
            mingw: https://ci-mirrors.rust-lang.org/rustc/i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z
          - target: aarch64-pc-windows-msvc # skip-pr skip-stable
            skip_tests: yes # skip-pr skip-stable

    steps:
        - uses: actions/checkout@v2
        - uses: actions/cache@v2
          with:
            path: |
             ~/.cargo/bin/
             ~/.cargo/registry/index/
             ~/.cargo/registry/cache/
             ~/.cargo/git/db/
             target/
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

   build:
    name: Build on Linux (Ubuntu)
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
         ~/.cargo/bin/
         ~/.cargo/registry/index/
         ~/.cargo/registry/cache/
         ~/.cargo/git/db/
         target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Fetch Deps
      run: cargo fetch
    - name: Build Project
      run: cargo build --verbose --offline
    - name: Run Tests
      run: cargo test --verbose --all
    - name: Run Clippy 
      run: cargo clippy --verbose -- -D warnings
